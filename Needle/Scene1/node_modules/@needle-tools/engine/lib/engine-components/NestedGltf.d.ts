import { AssetReference, type ProgressCallback } from "../engine/engine_addressables.js";
import { Behaviour } from "../engine-components/Component.js";
import { EventList } from "./EventList.js";
/** The nested gltf is a component that is used to load a gltf file when the component becomes active (start)
 * It will load the gltf file and instantiate it as a child of the parent of the GameObject that has this component
 */
export declare class NestedGltf extends Behaviour {
    /**  A reference to the gltf file that should be loaded */
    filePath?: AssetReference;
    /** Invoked when the nested glTF file has been instantiated */
    loaded: EventList<{
        component: NestedGltf;
        instance: any;
        asset: AssetReference;
    }>;
    /**
     * EXPERIMENTAL for cloud asset loading
     */
    loadAssetInParent: boolean;
    private _isLoadingOrDoneLoading;
    /** Register a callback that will be called when the progress of the loading changes */
    listenToProgress(evt: ProgressCallback): void;
    /** Begin loading the referenced gltf file in filePath */
    preload(): Promise<ArrayBufferLike | null> | null;
    /** @internal */
    start(): Promise<void>;
    /** @internal */
    onDestroy(): void;
    private hash;
}
