export { version as VERSION } from "./version.js";
export * from "./extension.js";
export * from "./plugins/index.js";
export { LODsManager, type LOD_Results } from "./lods.manager.js";
export { setDracoDecoderLocation, setKTX2TranscoderLocation, createLoaders, addDracoAndKTX2Loaders, configureLoader } from "./loaders.js";
export { getRaycastMesh, registerRaycastMesh, useRaycastMeshes } from "./utils.js";
import { WebGLRenderer } from "three";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader.js";
import { SmartLoadingHints } from "./loaders.js";
declare type UseNeedleGLTFProgressiveOptions = {
    /**
     * When set to true the LODs manager will automatically be enabled
     */
    enableLODsManager?: boolean;
    /**
     * Smart loading hints can be used by needle infrastructure to deliver assets optimized for a specific usecase.
     */
    hints?: Omit<SmartLoadingHints, "progressive">;
};
/** @deprecated Use `useNeedleProgressive(loader, renderer)` - this method will be removed in gltf-progressive 4 */
export declare function useNeedleProgressive(url: string, renderer: WebGLRenderer, loader: GLTFLoader, opts?: UseNeedleGLTFProgressiveOptions): any;
export declare function useNeedleProgressive(loader: GLTFLoader, renderer: WebGLRenderer, opts?: UseNeedleGLTFProgressiveOptions): any;
