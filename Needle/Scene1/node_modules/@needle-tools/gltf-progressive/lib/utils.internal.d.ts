export declare function isDebugMode(): string | boolean;
export declare function getParam(name: string): boolean | string;
export declare function resolveUrl(source: string | undefined, uri: string): string;
/** @returns `true` if it's a phone or tablet */
export declare function isMobileDevice(): boolean;
export declare function isDevelopmentServer(): boolean;
export type SlotReturnValue<T = any> = {
    use?: ((promise: Promise<T>) => void);
};
export declare class PromiseQueue<T = any> {
    readonly maxConcurrent: number;
    private readonly _running;
    private readonly _queue;
    debug: boolean;
    constructor(maxConcurrent?: number, opts?: {
        debug?: boolean;
    });
    private tick;
    /**
     * Request a slot for a promise with a specific key. This function returns a promise with a `use` method that can be called to add the promise to the queue.
     */
    slot(key: string): Promise<SlotReturnValue<T>>;
    private add;
    private internalUpdate;
}
