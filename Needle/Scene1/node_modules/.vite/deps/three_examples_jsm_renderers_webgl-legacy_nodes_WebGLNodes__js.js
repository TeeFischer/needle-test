import {
  WebGLNodeBuilder,
  nodeFrame
} from "./chunk-U6BF6GDP.js";
import {
  Material
} from "./chunk-DDCTK72C.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@needle-tools/engine/node_modules/three/examples/jsm/renderers/webgl-legacy/nodes/WebGLNodes.js
var builders = /* @__PURE__ */ new WeakMap();
Material.prototype.onBuild = function(object, parameters, renderer) {
  const material = this;
  if (material.isNodeMaterial === true) {
    let newBuilder;
    try {
      newBuilder = new WebGLNodeBuilder(object, renderer, parameters, material).build();
      builders.set(material, newBuilder);
    } catch (e) {
      console.error("Material.prototype.onBuild: ", e);
    }
  }
};
Material.prototype.onBeforeRender = function(renderer, scene, camera, geometry, object) {
  const nodeBuilder = builders.get(this);
  if (nodeBuilder !== void 0) {
    nodeFrame.material = this;
    nodeFrame.camera = camera;
    nodeFrame.object = object;
    nodeFrame.renderer = renderer;
    nodeFrame.scene = scene;
    nodeFrame.geometry = geometry;
    const updateNodes = nodeBuilder.updateNodes;
    if (updateNodes.length > 0) {
      renderer.state.useProgram(null);
      for (const node of updateNodes) {
        nodeFrame.updateNode(node);
      }
    }
  }
};
//# sourceMappingURL=three_examples_jsm_renderers_webgl-legacy_nodes_WebGLNodes__js.js.map
